name: Scrape and Deploy

on:
  schedule:
    # 4am ET approximated in UTC; adjust for DST as needed
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Restore geocode cache
        uses: actions/cache@v4
        with:
          path: data/geocode-cache.json
          key: geocode-cache-${{ hashFiles('scripts/scrape.mjs') }}-${{ github.run_id }}
          restore-keys: |
            geocode-cache-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Chromium and deps
        run: npx playwright install --with-deps chromium | cat

      - name: Run scraper
        env:
          MAP_DAYS: 7
        run: npm run scrape

      # Filtering now handled inside the scraper; keep this step removed

      - name: Commit updated data if changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add docs/data/*.geojson docs/data/date-range.json docs/data/snapshots/*.geojson docs/data/changes/*.json docs/data/all.ndjson data/geocode-cache.json || true
            git commit -m "chore(data): update permits and cache [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Write .env from GitHub Secrets
        run: |
          if [ -n "${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" ]; then
            echo "VITE_GOOGLE_MAPS_API_KEY=${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}" >> .env
          fi
          if [ -n "${{ secrets.VITE_GOOGLE_MAPS_MAP_ID }}" ]; then
            echo "VITE_GOOGLE_MAPS_MAP_ID=${{ secrets.VITE_GOOGLE_MAPS_MAP_ID }}" >> .env
          fi

      - name: Build
        run: npm run build

      - name: Copy static data to dist
        run: |
          mkdir -p dist/docs/data
          cp -R docs/data/* dist/docs/data/
          mkdir -p dist/assets
          cp -R assets/* dist/assets/
          # SPA 404 redirect
          cp index.html dist/404.html
          cp 404.html dist/ || true

      - name: Add CNAME for custom domain
        run: echo "treeheroesatl.org" > dist/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


